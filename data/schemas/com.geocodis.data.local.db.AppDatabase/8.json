{
  "formatVersion": 1,
  "database": {
    "version": 8,
    "identityHash": "61e46d6b03207269a69ceecb5707f5af",
    "entities": [
      {
        "tableName": "user",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `email` TEXT NOT NULL, `guid` INTEGER NOT NULL, `name` TEXT NOT NULL, `phone` TEXT NOT NULL, `userGroup` TEXT NOT NULL, `username` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "guid",
            "columnName": "guid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userGroup",
            "columnName": "userGroup",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_user_guid",
            "unique": true,
            "columnNames": [
              "guid"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_user_guid` ON `${TABLE_NAME}` (`guid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "scheme",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `active` INTEGER NOT NULL, `code` TEXT NOT NULL, `guid` INTEGER NOT NULL, `lastMonthlyData` TEXT NOT NULL, `locUtmX` REAL NOT NULL, `locUtmY` REAL NOT NULL, `latitude` REAL NOT NULL, `longitude` REAL NOT NULL, `utmZone` TEXT NOT NULL, `name` TEXT NOT NULL, `puc` TEXT NOT NULL, `loaded` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "guid",
            "columnName": "guid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastMonthlyData",
            "columnName": "lastMonthlyData",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "locUtmX",
            "columnName": "locUtmX",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "locUtmY",
            "columnName": "locUtmY",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "utmZone",
            "columnName": "utmZone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "puc",
            "columnName": "puc",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "loaded",
            "columnName": "loaded",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_scheme_guid",
            "unique": true,
            "columnNames": [
              "guid"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_scheme_guid` ON `${TABLE_NAME}` (`guid`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "measurement_group",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `guid` INTEGER NOT NULL, `name` TEXT NOT NULL, `label` TEXT NOT NULL, `active` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "guid",
            "columnName": "guid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "label",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "measurement",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `guid` INTEGER NOT NULL, `active` INTEGER NOT NULL, `code` TEXT NOT NULL, `dailyForm` INTEGER NOT NULL, `decimals` INTEGER NOT NULL, `description` TEXT NOT NULL, `displayOrder` INTEGER NOT NULL, `measurementGroupId` INTEGER NOT NULL, `maxValue` REAL NOT NULL, `minToleranceFailPerc` INTEGER NOT NULL, `minToleranceOkPerc` INTEGER NOT NULL, `minValue` REAL NOT NULL, `monthlyForm` INTEGER NOT NULL, `name` TEXT NOT NULL, `obligatory` INTEGER NOT NULL, `showDefault` INTEGER NOT NULL, `sms` INTEGER NOT NULL, `stdb2ref` TEXT NOT NULL, `umbrellaCollection` INTEGER NOT NULL, `unit` TEXT NOT NULL, `validation` INTEGER NOT NULL, FOREIGN KEY(`measurementGroupId`) REFERENCES `measurement_group`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "guid",
            "columnName": "guid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dailyForm",
            "columnName": "dailyForm",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "decimals",
            "columnName": "decimals",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayOrder",
            "columnName": "displayOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "measurementGroupId",
            "columnName": "measurementGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxValue",
            "columnName": "maxValue",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "minToleranceFailPerc",
            "columnName": "minToleranceFailPerc",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minToleranceOkPerc",
            "columnName": "minToleranceOkPerc",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minValue",
            "columnName": "minValue",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "monthlyForm",
            "columnName": "monthlyForm",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "obligatory",
            "columnName": "obligatory",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "showDefault",
            "columnName": "showDefault",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sms",
            "columnName": "sms",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stdb2ref",
            "columnName": "stdb2ref",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "umbrellaCollection",
            "columnName": "umbrellaCollection",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unit",
            "columnName": "unit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "validation",
            "columnName": "validation",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_measurement_guid",
            "unique": true,
            "columnNames": [
              "guid"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_measurement_guid` ON `${TABLE_NAME}` (`guid`)"
          },
          {
            "name": "index_measurement_measurementGroupId",
            "unique": false,
            "columnNames": [
              "measurementGroupId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_measurement_measurementGroupId` ON `${TABLE_NAME}` (`measurementGroupId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "measurement_group",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "measurementGroupId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "monthly_data_entry",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`entryId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `entryGuid` INTEGER NOT NULL, `measurementId` INTEGER NOT NULL, `schemeId` INTEGER NOT NULL, `userInsertId` INTEGER NOT NULL, `userConfirmedId` INTEGER NOT NULL, `dirty` INTEGER NOT NULL, `deleted` INTEGER NOT NULL, `month` INTEGER NOT NULL, `year` INTEGER NOT NULL, `dataDate` TEXT NOT NULL, `dataInserted` TEXT NOT NULL, `dataRaw` REAL NOT NULL, `dataPredicted` REAL NOT NULL, `dataConfirmed` REAL NOT NULL, `dataComment` TEXT NOT NULL, `confirmed` INTEGER NOT NULL, `confirmationComment` TEXT NOT NULL, `valid` INTEGER NOT NULL, `locked` INTEGER NOT NULL, FOREIGN KEY(`measurementId`) REFERENCES `measurement`(`guid`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`schemeId`) REFERENCES `scheme`(`guid`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`userInsertId`) REFERENCES `user`(`guid`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`userConfirmedId`) REFERENCES `user`(`guid`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "entryId",
            "columnName": "entryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "entryGuid",
            "columnName": "entryGuid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "measurementId",
            "columnName": "measurementId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "schemeId",
            "columnName": "schemeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userInsertId",
            "columnName": "userInsertId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userConfirmedId",
            "columnName": "userConfirmedId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dirty",
            "columnName": "dirty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "month",
            "columnName": "month",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "year",
            "columnName": "year",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dataDate",
            "columnName": "dataDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dataInserted",
            "columnName": "dataInserted",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dataRaw",
            "columnName": "dataRaw",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "dataPredicted",
            "columnName": "dataPredicted",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "dataConfirmed",
            "columnName": "dataConfirmed",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "dataComment",
            "columnName": "dataComment",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "confirmed",
            "columnName": "confirmed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "confirmationComment",
            "columnName": "confirmationComment",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "valid",
            "columnName": "valid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "locked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "entryId"
          ]
        },
        "indices": [
          {
            "name": "index_monthly_data_entry_schemeId",
            "unique": false,
            "columnNames": [
              "schemeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_monthly_data_entry_schemeId` ON `${TABLE_NAME}` (`schemeId`)"
          },
          {
            "name": "index_monthly_data_entry_measurementId",
            "unique": false,
            "columnNames": [
              "measurementId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_monthly_data_entry_measurementId` ON `${TABLE_NAME}` (`measurementId`)"
          },
          {
            "name": "index_monthly_data_entry_userInsertId",
            "unique": false,
            "columnNames": [
              "userInsertId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_monthly_data_entry_userInsertId` ON `${TABLE_NAME}` (`userInsertId`)"
          },
          {
            "name": "index_monthly_data_entry_userConfirmedId",
            "unique": false,
            "columnNames": [
              "userConfirmedId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_monthly_data_entry_userConfirmedId` ON `${TABLE_NAME}` (`userConfirmedId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "measurement",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "measurementId"
            ],
            "referencedColumns": [
              "guid"
            ]
          },
          {
            "table": "scheme",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "schemeId"
            ],
            "referencedColumns": [
              "guid"
            ]
          },
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userInsertId"
            ],
            "referencedColumns": [
              "guid"
            ]
          },
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userConfirmedId"
            ],
            "referencedColumns": [
              "guid"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "monthly_entry_measurement_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT measurement.id, measurement.guid, measurement.active, measurement.code, measurement.dailyForm, measurement.decimals, measurement.description, measurement.displayOrder, measurement.measurementGroupId, measurement.maxValue, measurement.minToleranceFailPerc, measurement.minToleranceOkPerc,measurement.minValue, measurement.monthlyForm, measurement.name, measurement.obligatory, measurement.showDefault, measurement.sms, measurement.stdb2ref, measurement.umbrellaCollection, measurement.unit, measurement.validation,monthly_data_entry.entryGuid, monthly_data_entry.entryId, monthly_data_entry.schemeId, monthly_data_entry.measurementId,monthly_data_entry.userInsertId, monthly_data_entry.userConfirmedId, monthly_data_entry.dirty, monthly_data_entry.deleted, monthly_data_entry.month, monthly_data_entry.year, monthly_data_entry.dataDate, monthly_data_entry.dataInserted, monthly_data_entry.dataRaw, monthly_data_entry.dataPredicted, monthly_data_entry.dataConfirmed, monthly_data_entry.dataComment, monthly_data_entry.confirmed, monthly_data_entry.confirmationComment,monthly_data_entry.valid, monthly_data_entry.locked FROM measurement INNER JOIN monthly_data_entry ON measurement.id = monthly_data_entry.measurementId"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '61e46d6b03207269a69ceecb5707f5af')"
    ]
  }
}